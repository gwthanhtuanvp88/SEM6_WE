@model ClaimReport.Models.Claim

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(function(){
        $("#updateform").submit(function () {
            /*if ($("#files").val() == null || $("#files").val() == "")
            {
                alert('You must upload evidence with the claim');
                return false;
            }*/
            return true;
        })

        $("#assessmentlist").change(function () {
            var self = $(this);
            var items="";
            $.getJSON("@Url.Action("GetItemByAssessment", "Claims")/"+self.val(),
                                                                function(data){
                                                                    $.each(data,function(index,item){
                                                                        items+="<option value='"+item.Value+"'>"+item.Text
                                                                                                                            +"</option>";
                                                                    });
                                                                    $("#itemId").html(items);
                                                                });
        });
    })
</script>
<h2>Create</h2>

@using (Html.BeginForm("Create","Claims", FormMethod.Post, new { enctype = "multipart/form-data" , id = "updateform" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create New Claim</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", required="required" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.itemId, "Academy year", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("assessmentid", null, htmlAttributes: new { @class = "form-control col-md-4" , @id="assessmentlist"})
                @Html.DropDownList("itemId", null, htmlAttributes: new { @class = "form-control col-md-4", @id = "itemId" })
                @Html.ValidationMessage("itemId", "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label("Evidence", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="files" multiple name="files"/>    
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
